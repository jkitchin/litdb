[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "litdb"
version = "2.1.8"
authors = [
  {name = "John Kitchin", email = "jkitchin@andrew.cmu.edu"},
]
maintainers = [
  {name = "John Kitchin", email = "jkitchin@andrew.cmu.edu"}
]
description = "A literature database tool with GPT integration."
license = "MIT"
readme = {file = "README.org", content-type = "text/plain"}
dependencies = [
  "toml",
  "tomlkit",
  "requests",
  "pymupdf4llm",
  "docling",
  "langchain",
  "tqdm",
  "libsql",
  "sentence-transformers",
  "transformers",
  "click",
  "rich",
  "beautifulsoup4",
  "ratelimit",
  "python-docx",
  "python-pptx",
  "nbconvert",
  "nbformat",
  "ollama",
  "litellm",
  "dateparser",
  "jinja2",
  "pytesseract",
  "pillow",
  "bibtexparser",
  # these are sort of hard to install, and rely on other libraries
  # I document them here, but consider it optional
  #  "pyaudio",
  #  "playsound",
  # for coa
  "pandas",
  "more-itertools",
  "nameparser",
  "tabulate",
  "IPython",
  # youtube
  "yt_dlp",
  "webvtt-py",
  # the streamlit app
  "streamlit",
  # image clip search
  "pyperclip",
  "pillow",
  "pillow_heif",
  # web crawling
  "scrapy",
  "backoff",
  # deep research
  "gpt_researcher",
  "duckduckgo-search",
  "langchain_ollama",
  "langchain_google_genai",
  "langchain_anthropic",
  "mistune",
  "htmldocx",
  "docx",
  "md2pdf",
  "pypandoc",
  # mcp server
  "mcp[cli]",
  #
  "gmft",
  "futurehouse_client",
  "ruff>=0.13.3",
]

[project.scripts]
litdb = "litdb.cli:cli"
litdb_mcp = "litdb.mcp_server:main"

[project.urls]
Homepage = "https://github.com/jkitchin/litdb"

[project.optional-dependencies]
test = [
  "pytest>=8.0.0",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.12.0",
  "responses>=0.24.0",
  "freezegun>=1.4.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--verbose",
  "--cov=src/litdb",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-branch",
]
markers = [
  "unit: Unit tests (fast, no external dependencies)",
  "integration: Integration tests (may call external APIs)",
  "slow: Slow tests (long-running operations)",
]

[tool.coverage.run]
source = ["src/litdb"]
omit = [
  "*/tests/*",
  "*/__pycache__/*",
  "*/site-packages/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# (shell-command "uv build")
# (shell-command "uv publish")